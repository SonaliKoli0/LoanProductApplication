package product;

import java.util.Date;
import java.util.List;
import java.util.ArrayList;

public class LoanProduct extends Product {
 
    private int loanId;
    private double rate;
    private double totalValue;
    private List<Schedule> disbursementSchedule;
    private Schedule schedule;
    

 
    public LoanProduct() {
		// TODO Auto-generated constructor stub
	}

	public LoanProduct(int productId, int loanId, Date startDate, Date endDate, String productType, double totalValue,
			double rate, List<Schedule> disbursementSchedule, ArrayList<Cashflow> cashflows) {
		// TODO Auto-generated constructor stub
		super(productId,productType, startDate, endDate, cashflows);
		this.loanId=loanId;
		this.rate= rate;
		this.totalValue= totalValue;
		this.disbursementSchedule= disbursementSchedule;
	
	}
	public LoanProduct(Product p, int loanId,double totalValue,
			double rate, List<Schedule> disbursementSchedule) {
		// TODO Auto-generated constructor stub
		super(p);
		this.loanId=loanId;
		this.rate= rate;
		this.totalValue= totalValue;
		this.disbursementSchedule= disbursementSchedule;
	
	}

	public int getLoanId() {
        return loanId;
    }
 
    public void setLoanId(int loanId) {
        this.loanId = loanId;
    }
 
    public double getRate() {
        return rate;
    }
 
    public void setRate(Double rate) {
        this.rate = rate;
    }
 
    public double getTotalValue() {
        return totalValue;
    }
 
    public void setTotalValue(Double totalValue) {
        this.totalValue = totalValue;
    }
 
    public List<Schedule> getDisbursementSchedule() {
    	
        return disbursementSchedule;
    }
   public String printDisbursementSchedule() {
    	String str=new String();
    	str+="{";
	   for(Schedule s: disbursementSchedule){
       	str+=s.toString()+",";
       }
	   str+="}";
	   return str;
    }
    public void setDisbursementSchedule(List<Schedule> disbursementSchedule) {
        this.disbursementSchedule = disbursementSchedule;
    }
 
    
    	@Override
        public Product updateProduct(LoanProduct lp, int productId){
        	try {
        		lp = (LoanProduct) LoanProductSQL.updateProduct(lp, productId);
        		ScheduleSQL.updateDisbursementSchedule(lp, productId);
    		} catch (Exception e) {
    			// TODO: handle exception
    		}
    		return lp;
        // Replace with logic to update the loan product
    }
 
    public void createProduct(LoanProduct Ip) {
        // Replace with logic to create a new loan product
    	try {
			ProductSQL.insert(Ip);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }
 
    @Override
    public Product readProduct(int id){
    	Product lp=null;
    	try {
    
			lp=LoanProductSQL.readProduct(id);
		
		} catch (Exception e) {
			e.printStackTrace();
		}
    	return lp;
    }
    @Override
    public void deleteProduct(int ProductId) {
        
    	try {
    	    
			LoanProductSQL.deleteProduct(ProductId);
		
		} catch (Exception e) {
			e.printStackTrace();
		}
    }
 
    public void repayAmount(int loanId, Double amount,Date date) {
    	try {
			ScheduleSQL.insertRepaymentSchedule(loanId, amount,Util.toSQLDate(date) );
		} catch (Exception e) {
			// TODO Auto-generated catch block
			System.out.println("Loan id does not exist");
		}
        // Replace with logic to process the loan repayment
    }
 
    @Override
    public String toString() {
        return "LoanProduct{" +
    
                "loanId=" + getLoanId() +
                ", rate=" + rate +
                ",Start Date="+Util.formatDate(getStartDate())+
                ",End Date="+Util.formatDate(getEndDate())+
                ", totalValue=" + totalValue +
                ", disbursementSchedule= " +
              disbursementSchedule
                +
                '}';
    }

	public Schedule getSchedule() {
		return schedule;
	}

	public void setSchedule(Schedule schedule) {
		this.schedule = schedule;
	}
}