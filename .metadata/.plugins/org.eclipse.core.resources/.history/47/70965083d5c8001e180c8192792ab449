package product;


import java.util.Date;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

 
public class Product {
 
    public static final String NEW = "NEW";
    public static final String AMEND = "AMEND";
    public static final String READ = "READ";
    public static final String REMOVE = "REMOVE";
    
    public static final String ACTION = "Action";
    public static final String LOAN = "Loan";
 
    private int productId;
    private Date startDate;
    private Date endDate;
    private String action;
    private ArrayList<Cashflow> cashflows;
    private String productType;
    
    public Product() {
       
    }
 
    public Product(int productId, String productType,Date startDate, Date endDate, ArrayList<Cashflow> cashflows) {
        this.productId = productId;
        this.startDate = startDate;
        this.endDate = endDate;
        this.cashflows = cashflows;
        this.productType=productType;
    }
 
    public int getProductId() {
        return productId;
    }
 
    public void setProductId(int productId) {
        this.productId = productId;
    }
 
    public Date getStartDate() {
        return startDate;
    }
 
    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }
 
    public Date getEndDate() {
        return endDate;
    }
 
    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }
 
    public String getAction() {
        return action;
    }
 
    public void setAction(String action) {
        this.action = action;
    }
 
    public ArrayList<Cashflow> getCashflows() {
        return cashflows;
    }
 
    public void setCashflows(ArrayList<Cashflow> cashflows) {
        this.cashflows = cashflows;
    }
 

    public void callAction(String Action,Product p) {
    	switch(Action){
    	case "Repay":
    		if(p instanceof LoanProduct){
	    		LoanProduct lp = (LoanProduct) p;
	    		System.out.println("Repay");
	    		lp.repayAmount(lp.getLoanId(),new Long(1200));
    		}
    		break;
    	case Product.READ:
    		LoanProduct lp = (LoanProduct) p;
    		lp.readProduct(lp.getProductId());
    		break;
    	case Product.REMOVE:
    		p.deleteProduct(p.getProductId());
    		break;
    		default:
    			break;
    	}
       
    }
    private void repayAmount(int loanId, Long i) {
		// TODO Auto-generated method stub
		
	}

	protected void readProduct(Integer i) {
		// TODO Auto-generated method stub
		
	}

	private void updateProduct(Integer i) {
		// TODO Auto-generated method stub
		
	}

	private void deleteProduct(Integer i) {
		// TODO Auto-generated method stub
		
	}

	
	

	public static Product getProduct(HashMap<String , String> inputs) throws Exception{
    	
    	if(inputs.get(Product.ACTION).equals(Product.NEW)){
    	if( inputs.get("productType").equals("Loan")){
    	int id=1;
    	Date startDate =  Util.parseDate(inputs.get("startDate"));
    	Date endDate = Util.parseDate(inputs.get("endDate"));
    	double rate= Double.parseDouble(inputs.get("rate"));
    	double totalValue= Double.parseDouble(inputs.get("totalValue"));
       String schedule = inputs.get("schedule");
       String productType=inputs.get("productType");
      
    	 String[] scheduleArray= schedule.split("\\.");
    	
    	 HashMap<Date, Long> disbursementSchedule = new HashMap<Date,Long>();
    	 for(String s: scheduleArray){
    		 
    		 String[] oneSchedule=s.split("=");
    		 disbursementSchedule.put(Util.parseDate(oneSchedule[0]), Long.parseLong(oneSchedule[1]));
    	 }
    	
        LoanProduct lp =new LoanProduct(id,startDate, endDate,productType, new ArrayList<Cashflow>(),rate, totalValue,disbursementSchedule);
      lp.createProduct(lp);
        
    		return lp;
    	}
    	} else {
    		//using productId we will find productType
    		String productType="Loan";
			if(productType.equals(Product.LOAN)){
    			LoanProduct lp= new LoanProduct();
    			lp.setProductId(Integer.parseInt(inputs.get("loanID")));
    			lp.callAction(inputs.get(Product.ACTION),lp);
    			return lp;
    		}
    		
    	}
    	return null;
    	
    }
 
    @Override
    public String toString() {
        return "Product{" +
                "productId=" + productId +
                ", startDate=" + startDate +
                ", endDate=" + endDate +
                ", action='" + action + '\'' +
                ", cashflows=" + cashflows +
                '}';
    }

	public String getProductType() {
		return productType;
	}

	public void setProductType(String productType) {
		this.productType = productType;
	}

	public Map<java.util.Date, Long> getDisbursementSchedule() {
		// TODO Auto-generated method stub
		return null;
	}
}
 